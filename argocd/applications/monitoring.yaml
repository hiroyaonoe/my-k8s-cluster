# https://github.com/prometheus-operator/prometheus-operator/issues/4439#issuecomment-1030198014
# https://github.com/prometheus-community/helm-charts/issues/1500#issuecomment-969031148
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus-crds
spec:
  project: default
  source:
    repoURL: https://github.com/prometheus-community/helm-charts.git
    path: charts/kube-prometheus-stack/crds
    targetRevision: kube-prometheus-stack-36.0.3
    directory:
      recurse: true
  destination:
    server: "https://kubernetes.default.svc"
    namespace: monitoring
  syncPolicy:
    syncOptions:
    - Replace=true
    - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus
spec:
  project: default
  source:
    chart: kube-prometheus-stack
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 36.0.3
    helm:
      releaseName: prometheus
      skipCrds: true
      values: |
        prometheus:
          prometheusSpec:
            storageSpec:
              volumeClaimTemplate:
                spec:
                  resources:
                    requests:
                      storage: 5Gi     # Size of volume used by prometheus'. Can be modified depending on  required retention
        grafana:
          persistence:
            type: statefulset          # To deploy Grafana as a StatefulSet
            enabled: true
            size: 5Gi
          defaultDashboardsTimezone: "browser"
          sidecar:                              
            dashboards:
              enabled: true                        # To enable dashboards as configMaps automatically picked up by Grafana
              label: grafana_dashboard             # Label the configMaps should have in order to be added
              labelValue: "1"
              folder: /tmp/dashboards
              searchNamespace: ALL                 # To look for dashboard configMaps in all namespaces
  destination:
    server: "https://kubernetes.default.svc"
    namespace: monitoring
  syncPolicy:
    syncOptions:
    - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: monitoring
spec:
  project: default
  source:
    repoURL: https://github.com/hiroyaonoe/my-k8s-cluster.git
    targetRevision: main
    path: argocd/manifests/monitoring
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    automated: {}
    syncOptions:
    - CreateNamespace=true
